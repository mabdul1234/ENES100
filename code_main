#include <Enes100.h>

float x, y, theta;

//Used for timing
unsigned long e = 10;  

//Defines variable duration used for finding time of wave (ULTRASONIC)
//float duration;

//Defines variable distance used for finding distance of wave (ULTRASONIC)
//float distance;

//Now LED! is 4, this sounds like the C++ stuff
#define LED1 4;  

//Motor A Connections:
int enA = 13;
int in1 = 12;
int in2 = 11;

//Motor B Connections:
int enB = 8;
int in3 = 10;
int in4 = 9;

//Motor C Connections:
int enC = 7;
int in5 = 6;
int in6 = 5;

//Motor D Connections:
int enD = 2;
int in7 = 4;
int in8 = 3;

//Ultrasonic Connections 
//int trigPin = 22;
//int echoPin = 24;

void directionControl(){

 //Turn on motor A, B, C, D
 digitalWrite(in1, LOW); 
 digitalWrite(in2, HIGH);
 digitalWrite(in3, LOW);
 digitalWrite(in4, HIGH);
 digitalWrite(in5, HIGH);
 digitalWrite(in6, LOW);
 digitalWrite(in7, HIGH);
 digitalWrite(in8, LOW);
 delay(2000);
}

void speedControl(){
 //Turn on motors
 int i = 255;
 analogWrite(enA, i);
 analogWrite(enB, i);
 analogWrite(enC, i);
 analogWrite(enD, i);
 delay(20);
}

void start_turning (){
digitalWrite (in1, LOW);
digitalWrite (in2, HIGH);
digitalWrite (in3, LOW);
digitalWrite(in4, HIGH);
digitalWrite(in5, LOW);
digitalWrite(in6, HIGH);
digitalWrite(in7, LOW);
digitalWrite(in8, HIGH);
}

void setup() {

Enes100.begin("CRASH", CRASH_SITE, 231, 50, 22); 

//Motor pins
pinMode(enA, OUTPUT);
pinMode(enB, OUTPUT);
pinMode(enC, OUTPUT);
pinMode(enD, OUTPUT);
pinMode(in1, OUTPUT);
pinMode(in2, OUTPUT);
pinMode(in3, OUTPUT);
pinMode(in4, OUTPUT);
pinMode(in5, OUTPUT);
pinMode(in6, OUTPUT);
pinMode(in7, OUTPUT);
pinMode(in8, OUTPUT);

//Ultrasonic sensor pins
/*pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);*/

//Begins collecting data from all sensors globally at a rate of 9600 bits/second
//Serial.begin(9600);
}

void loop() {

Enes100.updateLocation(); //updates x and Y arcuo marker values

bool v = Enes100.isVisible(); //is the aruco marker visible?
float x = Enes100.getX();
float y = Enes100.getY();
float theta = Enes100.getTheta();
float goalTheta = 1.57;

speedControl(); 
//directionControl();

delay(2000);

while (theta < goalTheta){
start_turning();
theta = Enes100.getTheta();
}

digitalWrite (in1, LOW);
digitalWrite (in2, LOW);
digitalWrite (in3, LOW);
digitalWrite(in4, LOW);
digitalWrite(in5, LOW);
digitalWrite(in6, LOW);
digitalWrite(in7, LOW);
digitalWrite(in8, LOW);

delay (2000);


Enes100.println(x); //print x coordinate to vision system
Enes100.println(y); //print y coordinate to vision system 
Enes100.println(theta); //print theta to vision system
delay(e); //use unsigned long from above 

//Clears the trigPin so the sensor is off, therefore distance is 0
/*digitalWrite(trigPin, LOW);
delayMicroseconds(2);

// Sets the trigPin on HIGH state for 10 micro seconds, reading distance for 10 microseconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);

// Calculating the distance
distance = (duration * 0.034 ) / 2;

Serial.print("Distance: ");
Serial.println(distance); //Print the distance to the serial monitor
delay(500); //Delay for stability */

}
